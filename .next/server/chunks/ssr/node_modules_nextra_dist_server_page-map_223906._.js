module.exports = {

"[project]/node_modules/nextra/dist/server/page-map/normalize.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "normalizePageMap": (()=>normalizePageMap)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$nextra$2f$dist$2f$server$2f$schemas$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/nextra/dist/server/schemas.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$zod$2d$validation$2d$error$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/zod-validation-error/dist/index.mjs [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$nextra$2f$dist$2f$server$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/nextra/dist/server/utils.js [app-rsc] (ecmascript)");
;
;
;
function normalizePageMap(pageMap) {
    if (Array.isArray(pageMap)) {
        return sortFolder(pageMap.map((item)=>"children" in item ? normalizePageMap(item) : item));
    }
    return sortFolder(pageMap);
}
function sortFolder(pageMap) {
    const newChildren = [];
    const isFolder = !Array.isArray(pageMap);
    const folder = isFolder ? {
        ...pageMap
    } : {
        children: pageMap
    };
    const meta = {};
    for (const item of folder.children){
        if (isFolder && "frontMatter" in item && item.frontMatter?.asIndexPage && item.route === folder.route) {
            folder.frontMatter = item.frontMatter;
        } else if ("children" in item) {
            newChildren.push(normalizePageMap(item));
        } else if ("data" in item) {
            for (const [key, titleOrObject] of Object.entries(item.data)){
                const { data, error } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$nextra$2f$dist$2f$server$2f$schemas$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["metaSchema"].safeParse(titleOrObject);
                if (error) {
                    throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$zod$2d$validation$2d$error$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["fromZodError"])(error);
                }
                if (key === "*") {
                    delete data.title;
                    delete data.href;
                }
                meta[key] = data;
            }
        } else {
            newChildren.push(item);
        }
    }
    if (folder.name && !folder.frontMatter?.title) {
        folder.title = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$nextra$2f$dist$2f$server$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["pageTitleFromFilename"])(folder.name);
    }
    const metaKeys = Object.keys(meta);
    const hasIndexKey = metaKeys.includes("index");
    const items = newChildren.sort((a, b)=>{
        const indexA = metaKeys.indexOf(a.name);
        const indexB = metaKeys.indexOf(b.name);
        if (!hasIndexKey) {
            if (b.name === "index") return 1;
            if (a.name === "index") return -1;
        }
        if (indexA === -1 && indexB === -1) return a.name < b.name ? -1 : 1;
        if (indexA === -1) return 1;
        if (indexB === -1) return -1;
        return indexA - indexB;
    });
    for (const [index, metaKey] of metaKeys.filter((key)=>key !== "*").entries()){
        const metaItem = meta[metaKey];
        const item = items.find((item2)=>item2.name === metaKey);
        if (metaItem.type === "menu" && item) {
            item.items = metaItem.items;
            const { children } = items.find((i)=>i.name === metaKey);
            for (const [key, value] of Object.entries(// @ts-expect-error fixme
            item.items)){
                if (!value.href && children.every((i)=>i.name !== key)) {
                    throw new Error(`Validation of "_meta" file has failed.
The field key "${metaKey}.items.${key}" in \`_meta\` file refers to a page that cannot be found, remove this key from "_meta" file.`);
                }
            }
        }
        if (item) continue;
        const isValid = metaItem.type === "separator" || metaItem.type === "menu" || metaItem.href;
        if (!isValid) {
            throw new Error(`Validation of "_meta" file has failed.
The field key "${metaKey}" in \`_meta\` file refers to a page that cannot be found, remove this key from "_meta" file.`);
        }
        const currentItem = items[index];
        if (currentItem && currentItem.name === metaKey) continue;
        items.splice(index, // index at which to start changing the array
        0, // remove zero items
        // @ts-expect-error fixme
        {
            name: metaKey,
            ...meta[metaKey]
        });
    }
    if (metaKeys.length) {
        items.unshift({
            data: meta
        });
    }
    const result = isFolder ? {
        ...folder,
        children: items
    } : items;
    return result;
}
;
}}),
"[project]/node_modules/nextra/dist/server/page-map/placeholder.js?lang= [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RouteToFilepath": (()=>RouteToFilepath),
    "pageMap": (()=>pageMap)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$nextra$2f$dist$2f$server$2f$page$2d$map$2f$normalize$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/nextra/dist/server/page-map/normalize.js [app-rsc] (ecmascript)");
;
const pageMap = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$nextra$2f$dist$2f$server$2f$page$2d$map$2f$normalize$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["normalizePageMap"])([]);
const RouteToFilepath = {};
}}),

};

//# sourceMappingURL=node_modules_nextra_dist_server_page-map_223906._.js.map